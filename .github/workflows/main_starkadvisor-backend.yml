name: Deploy Django Backend (OIDC + ZipDeploy estable)

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

# Evita ejecuciones solapadas del deploy
concurrency:
  group: backend-deploy-${{ github.ref }}
  cancel-in-progress: true

env:
  PYTHON_VERSION: "3.11"
  APP_NAME: "starkadvisor-backend"
  RESOURCE_GROUP: "rg-starkadvisor"

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python (opcional, sólo para pre-chequeos)
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      # Login federado (OIDC) usando tus secretos ya configurados en Azure
      - name: Azure Login (OIDC)
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_2A74A6406B2C4AE5BDE8385E609832AC }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_0A35B1E80008457D8D59EF4E62EA9F08 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_958550156BE34115B59D23AC21EE820B }}

      # Asegura settings críticos antes del deploy
      - name: Ensure App Settings
        run: |
          az webapp config appsettings set \
            --name "$APP_NAME" \
            --resource-group "$RESOURCE_GROUP" \
            --settings \
              SCM_DO_BUILD_DURING_DEPLOYMENT=true \
              WEBSITES_PORT=8000 \
              DJANGO_SETTINGS_MODULE=starkadvisorbackend.settings.production \
              WEBSITE_RUN_FROM_PACKAGE=1

      # Empaqueta el repo como ZIP limpio (sin .git, caches, venvs, etc.)
      - name: Create ZIP package
        run: |
          echo "Creando app.zip..."
          zip -r app.zip . \
            -x "*.git*" \
            -x ".github/*" \
            -x "__pycache__/*" \
            -x "*/__pycache__/*" \
            -x "*.pyc" \
            -x ".venv/*" "venv/*" \
            -x ".pytest_cache/*" \
            -x ".mypy_cache/*"

      # Evita el 409: detener -> desplegar ZIP -> arrancar
      - name: Stop Web App (avoid locks)
        run: az webapp stop --name "$APP_NAME" --resource-group "$RESOURCE_GROUP"

      - name: Zip Deploy via Azure CLI (sin OneDeploy)
        run: |
          # --type zip usa Kudu ZipDeploy (estable). --clean limpia destino cuando no usas RunFromPackage
          az webapp deploy \
            --resource-group "$RESOURCE_GROUP" \
            --name "$APP_NAME" \
            --src-path app.zip \
            --type zip \
            --async false

      - name: Start Web App
        run: az webapp start --name "$APP_NAME" --resource-group "$RESOURCE_GROUP"

      # Info útil al final
      - name: Deployment info
        run: |
          HOST=$(az webapp show -n "$APP_NAME" -g "$RESOURCE_GROUP" --query defaultHostName -o tsv)
          echo "App Service URL: https://$HOST"
